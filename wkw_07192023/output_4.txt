DDP: I am worker size = 8, rank = 4, local_rank = 0
rank = 4, is_initialized = True, nccl_avail = True, get_rank = 4, get_size = 8
rank = 4, local_rank = 0, num_of_gpus = 1
Rank = 4  Torch Thread setup with number of threads:  32  with number of inter_op threads:  64
X =  tensor([400., 401., 402., 403., 404., 405., 406., 407., 408., 409., 410., 411.,
        412., 413., 414., 415., 416., 417., 418., 419., 420., 421., 422., 423.,
        424., 425., 426., 427., 428., 429., 430., 431., 432., 433., 434., 435.,
        436., 437., 438., 439., 440., 441., 442., 443., 444., 445., 446., 447.,
        448., 449., 450., 451., 452., 453., 454., 455., 456., 457., 458., 459.,
        460., 461., 462., 463., 464., 465., 466., 467., 468., 469., 470., 471.,
        472., 473., 474., 475., 476., 477., 478., 479., 480., 481., 482., 483.,
        484., 485., 486., 487., 488., 489., 490., 491., 492., 493., 494., 495.,
        496., 497., 498., 499.], dtype=torch.float64)
Y =  tensor([800., 802., 804., 806., 808., 810., 812., 814., 816., 818., 820., 822.,
        824., 826., 828., 830., 832., 834., 836., 838., 840., 842., 844., 846.,
        848., 850., 852., 854., 856., 858., 860., 862., 864., 866., 868., 870.,
        872., 874., 876., 878., 880., 882., 884., 886., 888., 890., 892., 894.,
        896., 898., 900., 902., 904., 906., 908., 910., 912., 914., 916., 918.,
        920., 922., 924., 926., 928., 930., 932., 934., 936., 938., 940., 942.,
        944., 946., 948., 950., 952., 954., 956., 958., 960., 962., 964., 966.,
        968., 970., 972., 974., 976., 978., 980., 982., 984., 986., 988., 990.,
        992., 994., 996., 998.], dtype=torch.float64)
epoch =  1
0
[tensor([409., 415., 413., 458., 435., 454., 492., 400.], dtype=torch.float64), tensor([818., 830., 826., 916., 870., 908., 984., 800.], dtype=torch.float64)]
1
[tensor([473., 486., 417., 446., 453., 426., 414., 434.], dtype=torch.float64), tensor([946., 972., 834., 892., 906., 852., 828., 868.], dtype=torch.float64)]
2
[tensor([462., 491., 464., 406., 465., 432., 495., 472.], dtype=torch.float64), tensor([924., 982., 928., 812., 930., 864., 990., 944.], dtype=torch.float64)]
3
[tensor([451., 407., 444., 477., 438., 447., 467., 475.], dtype=torch.float64), tensor([902., 814., 888., 954., 876., 894., 934., 950.], dtype=torch.float64)]
4
[tensor([479., 470., 478., 497., 466., 416., 456., 450.], dtype=torch.float64), tensor([958., 940., 956., 994., 932., 832., 912., 900.], dtype=torch.float64)]
5
[tensor([431., 408., 439., 421., 412., 496., 449., 474.], dtype=torch.float64), tensor([862., 816., 878., 842., 824., 992., 898., 948.], dtype=torch.float64)]
6
[tensor([498., 469., 487., 489., 420., 403., 471., 482.], dtype=torch.float64), tensor([996., 938., 974., 978., 840., 806., 942., 964.], dtype=torch.float64)]
7
[tensor([418., 476., 401., 480., 402., 455., 448., 459.], dtype=torch.float64), tensor([836., 952., 802., 960., 804., 910., 896., 918.], dtype=torch.float64)]
8
[tensor([441., 494., 424., 429., 427., 442., 481., 490.], dtype=torch.float64), tensor([882., 988., 848., 858., 854., 884., 962., 980.], dtype=torch.float64)]
9
[tensor([404., 411., 425., 422., 433., 485., 428., 488.], dtype=torch.float64), tensor([808., 822., 850., 844., 866., 970., 856., 976.], dtype=torch.float64)]
10
[tensor([440., 461., 499., 405., 410., 443., 452., 460.], dtype=torch.float64), tensor([880., 922., 998., 810., 820., 886., 904., 920.], dtype=torch.float64)]
11
[tensor([437., 430., 468., 457., 423., 484., 419., 483.], dtype=torch.float64), tensor([874., 860., 936., 914., 846., 968., 838., 966.], dtype=torch.float64)]
12
[tensor([445., 493., 463., 436.], dtype=torch.float64), tensor([890., 986., 926., 872.], dtype=torch.float64)]
epoch =  2
0
[tensor([450., 463., 475., 477., 427., 432., 439., 451.], dtype=torch.float64), tensor([900., 926., 950., 954., 854., 864., 878., 902.], dtype=torch.float64)]
1
[tensor([492., 419., 468., 448., 491., 454., 429., 453.], dtype=torch.float64), tensor([984., 838., 936., 896., 982., 908., 858., 906.], dtype=torch.float64)]
2
[tensor([486., 428., 408., 490., 435., 409., 482., 465.], dtype=torch.float64), tensor([972., 856., 816., 980., 870., 818., 964., 930.], dtype=torch.float64)]
3
[tensor([440., 459., 424., 488., 420., 445., 474., 444.], dtype=torch.float64), tensor([880., 918., 848., 976., 840., 890., 948., 888.], dtype=torch.float64)]
4
[tensor([487., 404., 415., 422., 443., 423., 479., 467.], dtype=torch.float64), tensor([974., 808., 830., 844., 886., 846., 958., 934.], dtype=torch.float64)]
5
[tensor([455., 416., 403., 495., 469., 498., 406., 458.], dtype=torch.float64), tensor([910., 832., 806., 990., 938., 996., 812., 916.], dtype=torch.float64)]
6
[tensor([471., 464., 446., 496., 470., 437., 417., 489.], dtype=torch.float64), tensor([942., 928., 892., 992., 940., 874., 834., 978.], dtype=torch.float64)]
7
[tensor([456., 478., 447., 431., 414., 442., 433., 472.], dtype=torch.float64), tensor([912., 956., 894., 862., 828., 884., 866., 944.], dtype=torch.float64)]
8
[tensor([476., 481., 452., 483., 430., 484., 461., 497.], dtype=torch.float64), tensor([952., 962., 904., 966., 860., 968., 922., 994.], dtype=torch.float64)]
9
[tensor([418., 462., 466., 457., 493., 411., 436., 412.], dtype=torch.float64), tensor([836., 924., 932., 914., 986., 822., 872., 824.], dtype=torch.float64)]
10
[tensor([449., 400., 401., 425., 473., 405., 438., 494.], dtype=torch.float64), tensor([898., 800., 802., 850., 946., 810., 876., 988.], dtype=torch.float64)]
11
[tensor([499., 460., 410., 413., 421., 480., 485., 426.], dtype=torch.float64), tensor([998., 920., 820., 826., 842., 960., 970., 852.], dtype=torch.float64)]
12
[tensor([407., 434., 402., 441.], dtype=torch.float64), tensor([814., 868., 804., 882.], dtype=torch.float64)]
epoch =  3
0
[tensor([419., 477., 411., 493., 489., 413., 468., 452.], dtype=torch.float64), tensor([838., 954., 822., 986., 978., 826., 936., 904.], dtype=torch.float64)]
1
[tensor([491., 465., 443., 409., 432., 463., 406., 426.], dtype=torch.float64), tensor([982., 930., 886., 818., 864., 926., 812., 852.], dtype=torch.float64)]
2
[tensor([460., 457., 459., 418., 455., 442., 451., 412.], dtype=torch.float64), tensor([920., 914., 918., 836., 910., 884., 902., 824.], dtype=torch.float64)]
3
[tensor([499., 428., 402., 439., 462., 475., 453., 446.], dtype=torch.float64), tensor([998., 856., 804., 878., 924., 950., 906., 892.], dtype=torch.float64)]
4
[tensor([467., 421., 423., 479., 445., 488., 408., 494.], dtype=torch.float64), tensor([934., 842., 846., 958., 890., 976., 816., 988.], dtype=torch.float64)]
5
[tensor([403., 415., 490., 487., 473., 416., 484., 407.], dtype=torch.float64), tensor([806., 830., 980., 974., 946., 832., 968., 814.], dtype=torch.float64)]
6
[tensor([454., 464., 458., 472., 435., 420., 469., 400.], dtype=torch.float64), tensor([908., 928., 916., 944., 870., 840., 938., 800.], dtype=torch.float64)]
7
[tensor([466., 449., 434., 497., 456., 496., 485., 431.], dtype=torch.float64), tensor([932., 898., 868., 994., 912., 992., 970., 862.], dtype=torch.float64)]
8
[tensor([414., 495., 436., 424., 470., 478., 476., 438.], dtype=torch.float64), tensor([828., 990., 872., 848., 940., 956., 952., 876.], dtype=torch.float64)]
9
[tensor([461., 440., 441., 498., 481., 410., 422., 474.], dtype=torch.float64), tensor([922., 880., 882., 996., 962., 820., 844., 948.], dtype=torch.float64)]
10
[tensor([425., 486., 444., 437., 450., 483., 417., 482.], dtype=torch.float64), tensor([850., 972., 888., 874., 900., 966., 834., 964.], dtype=torch.float64)]
11
[tensor([427., 429., 471., 448., 433., 447., 430., 401.], dtype=torch.float64), tensor([854., 858., 942., 896., 866., 894., 860., 802.], dtype=torch.float64)]
12
[tensor([480., 405., 404., 492.], dtype=torch.float64), tensor([960., 810., 808., 984.], dtype=torch.float64)]
epoch =  4
0
[tensor([460., 449., 446., 451., 480., 465., 404., 406.], dtype=torch.float64), tensor([920., 898., 892., 902., 960., 930., 808., 812.], dtype=torch.float64)]
1
[tensor([429., 430., 476., 434., 493., 484., 491., 464.], dtype=torch.float64), tensor([858., 860., 952., 868., 986., 968., 982., 928.], dtype=torch.float64)]
2
[tensor([407., 442., 457., 463., 431., 498., 415., 423.], dtype=torch.float64), tensor([814., 884., 914., 926., 862., 996., 830., 846.], dtype=torch.float64)]
3
[tensor([420., 427., 441., 486., 447., 435., 499., 448.], dtype=torch.float64), tensor([840., 854., 882., 972., 894., 870., 998., 896.], dtype=torch.float64)]
4
[tensor([456., 422., 477., 455., 454., 452., 400., 470.], dtype=torch.float64), tensor([912., 844., 954., 910., 908., 904., 800., 940.], dtype=torch.float64)]
5
[tensor([472., 475., 481., 459., 471., 492., 483., 408.], dtype=torch.float64), tensor([944., 950., 962., 918., 942., 984., 966., 816.], dtype=torch.float64)]
6
[tensor([479., 409., 440., 487., 468., 413., 428., 453.], dtype=torch.float64), tensor([958., 818., 880., 974., 936., 826., 856., 906.], dtype=torch.float64)]
7
[tensor([485., 419., 432., 402., 417., 424., 478., 497.], dtype=torch.float64), tensor([970., 838., 864., 804., 834., 848., 956., 994.], dtype=torch.float64)]
8
[tensor([403., 438., 488., 496., 412., 445., 414., 495.], dtype=torch.float64), tensor([806., 876., 976., 992., 824., 890., 828., 990.], dtype=torch.float64)]
9
[tensor([469., 444., 437., 489., 482., 416., 443., 421.], dtype=torch.float64), tensor([938., 888., 874., 978., 964., 832., 886., 842.], dtype=torch.float64)]
10
[tensor([461., 426., 490., 405., 494., 410., 474., 462.], dtype=torch.float64), tensor([922., 852., 980., 810., 988., 820., 948., 924.], dtype=torch.float64)]
11
[tensor([450., 458., 473., 466., 401., 411., 439., 418.], dtype=torch.float64), tensor([900., 916., 946., 932., 802., 822., 878., 836.], dtype=torch.float64)]
12
[tensor([436., 433., 425., 467.], dtype=torch.float64), tensor([872., 866., 850., 934.], dtype=torch.float64)]
epoch =  5
0
[tensor([478., 412., 457., 489., 423., 427., 437., 466.], dtype=torch.float64), tensor([956., 824., 914., 978., 846., 854., 874., 932.], dtype=torch.float64)]
1
[tensor([440., 484., 400., 441., 418., 436., 448., 454.], dtype=torch.float64), tensor([880., 968., 800., 882., 836., 872., 896., 908.], dtype=torch.float64)]
2
[tensor([410., 479., 446., 462., 414., 472., 424., 432.], dtype=torch.float64), tensor([820., 958., 892., 924., 828., 944., 848., 864.], dtype=torch.float64)]
3
[tensor([495., 464., 460., 428., 407., 475., 480., 463.], dtype=torch.float64), tensor([990., 928., 920., 856., 814., 950., 960., 926.], dtype=torch.float64)]
4
[tensor([459., 434., 443., 431., 406., 401., 420., 445.], dtype=torch.float64), tensor([918., 868., 886., 862., 812., 802., 840., 890.], dtype=torch.float64)]
5
[tensor([456., 499., 468., 449., 433., 477., 438., 494.], dtype=torch.float64), tensor([912., 998., 936., 898., 866., 954., 876., 988.], dtype=torch.float64)]
6
[tensor([493., 496., 429., 455., 453., 482., 498., 409.], dtype=torch.float64), tensor([986., 992., 858., 910., 906., 964., 996., 818.], dtype=torch.float64)]
7
[tensor([485., 444., 491., 430., 439., 497., 404., 425.], dtype=torch.float64), tensor([970., 888., 982., 860., 878., 994., 808., 850.], dtype=torch.float64)]
8
[tensor([435., 415., 470., 471., 402., 465., 469., 422.], dtype=torch.float64), tensor([870., 830., 940., 942., 804., 930., 938., 844.], dtype=torch.float64)]
9
[tensor([447., 450., 413., 476., 488., 417., 419., 405.], dtype=torch.float64), tensor([894., 900., 826., 952., 976., 834., 838., 810.], dtype=torch.float64)]
10
[tensor([492., 461., 452., 490., 487., 408., 403., 481.], dtype=torch.float64), tensor([984., 922., 904., 980., 974., 816., 806., 962.], dtype=torch.float64)]
11
[tensor([474., 473., 467., 411., 458., 451., 483., 486.], dtype=torch.float64), tensor([948., 946., 934., 822., 916., 902., 966., 972.], dtype=torch.float64)]
12
[tensor([426., 416., 421., 442.], dtype=torch.float64), tensor([852., 832., 842., 884.], dtype=torch.float64)]
